name: CI/CD
on: [push]

jobs:
  backend-CI:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v3
      - name: Node.js 16.x Version
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: 종속 모듈들 캐싱
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/backend/node_modules
          key: npm-packages-${{ hashFiles('**/backend/package-lock.json') }}
        id: cache
      - name: 종속 모듈들 설치
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --production --prefix backend
      - name: lint 체크
        run: npm run lint --prefix backend
      - name: 빌드 체크
        run: npm run build --prefix backend

  frontend-CI:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v3
      - name: Node.js 16.x Version
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: 종속 모듈들 캐싱
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/frontend/node_modules
          key: npm-packages-${{ hashFiles('**/frontend/package-lock.json') }}
        id: cache
      - name: 종속 모듈들 설치
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --production --prefix frontend
      - name: lint 체크
        run: npm run lint --prefix frontend
      - name: 빌드 체크
        run: npm run build --prefix frontend

  main-CD:
    name: deploy-main
    runs-on: ubuntu-latest
    needs: [backend-CI, frontend-CI]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: 리모트 쉘 접속
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script_stop: true
          script: |
            echo "해당 리포지토리로 이동"
            cd $HOME/git/populmap
            echo "리포지토리 pull"
            git pull origin main
            echo "frontend 앱 빌드"
            cd $HOME/git/populmap/frontend
            npm install --production
            npm run build
            echo "backend 앱 빌드"
            cd $HOME/git/populmap/backend
            npm install --production
            npm run build
            echo "env 파일 복사"
            cp $HOME/frontend.env $HOME/git/populmap/frontend/.env
            cp $HOME/backend.env $HOME/git/populmap/backend/.env
            echo "앱 배포 (reload)"
            pm2 reload populmap
